name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags like v1.0.0, v1.2.3
  workflow_dispatch:  # Allows manual triggering from GitHub UI

permissions:
  contents: write

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        include:
          - os: windows-latest
            platform: win
          - os: macos-latest
            platform: mac
          - os: ubuntu-latest
            platform: linux

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build:${{ matrix.platform }} -- --publish=never
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-builds
          path: |
            dist/*.exe

      - name: Upload macOS artifacts
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-builds
          path: |
            dist/*.dmg
            dist/*.zip

      - name: Upload Linux artifacts
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: linux-builds
          path: |
            dist/*.AppImage
            dist/*.deb
            dist/*.tar.gz

  create-release:
    needs: release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: false
          generate_release_notes: true
          body: |
            ## üéå Japanese Week Quiz ${{ github.ref_name }}

            An Electron desktop application to help you learn the days of the week in Japanese!

            ### üì¶ Download Options

            **ü™ü Windows Users:**
            - `Japanese.Week.Quiz.Setup.${{ github.ref_name }}.exe` - **Recommended**: Full installer with Start Menu shortcuts
            - `Japanese.Week.Quiz.${{ github.ref_name }}.exe` - Portable version (no installation required)

            **üçé macOS Users:**
            - `Japanese.Week.Quiz-${{ github.ref_name }}.dmg` - **Recommended**: Standard Mac installer (Intel Macs)
            - `Japanese.Week.Quiz-${{ github.ref_name }}-arm64.dmg` - Standard Mac installer (Apple Silicon M1/M2)
            - `Japanese.Week.Quiz-${{ github.ref_name }}-mac.zip` - App bundle (Intel Macs)
            - `Japanese.Week.Quiz-${{ github.ref_name }}-arm64-mac.zip` - App bundle (Apple Silicon M1/M2)

            **üêß Linux Users:**
            - `Japanese.Week.Quiz-${{ github.ref_name }}.AppImage` - **Recommended**: Universal Linux app (works on any distro)
            - `japanese-week-quiz_${{ github.ref_name }}_amd64.deb` - Debian/Ubuntu package installer
            - `japanese-week-quiz-${{ github.ref_name }}.tar.gz` - Archive for manual installation

            ### üöÄ Quick Start
            1. Download the appropriate file for your operating system
            2. **Windows**: Run the .exe installer or portable version
            3. **macOS**: Open the .dmg file and drag to Applications
            4. **Linux**: Make AppImage executable (`chmod +x`) and run

            ### ‚ú® Features
            - Two quiz modes: Japanese ‚Üí English and English ‚Üí Japanese
            - Audio feedback for correct/incorrect answers
            - Auto-advance after answering
            - Skip functionality for difficult questions
            - Score tracking and review mode
            - Modern, gradient-based UI design

            ---
            *Built with Electron ‚Ä¢ Cross-platform ‚Ä¢ Open Source*
          files: |
            artifacts/windows-builds/*
            artifacts/macos-builds/*
            artifacts/linux-builds/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
